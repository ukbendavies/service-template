name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Run OpenAPI generators
      run: npm install -g @openapitools/openapi-generator-cli && openapi-generator-cli generate
    - name: Restore dependencies
      run: dotnet restore Template.sln
    - name: Build
      run: dotnet build --no-restore Template.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal Template.sln
    - name: Package
      run: dotnet pack --configuration Release Template.Generated.Client/Template.Generated.Client.csproj 
    - name: NuGet Push
      run: dotnet nuget push */bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s $SOURCE --skip-duplicate 
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SOURCE: https://nuget.pkg.github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/index.json
    - name: Google Cloud Auth
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    - name: Configure Docker to use Google Cloud
      run: gcloud auth configure-docker --quiet
    - name: Get metadata for Docker image
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Deploy to Google Cloud Run
      uses: 'google-github-actions/deploy-cloudrun@v0'
      with:
        service: ${{ secrets.GCP_APP_NAME }}
        region: europe-west1
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
